df$SbjctD[is.na(df$SbjctD)] <- substr(df$SID[is.na(df$SbjctD)], 5, 7)
df$Visit[is.na(df$Visit)] <- substr(df$SID[is.na(df$Visit)], 4, 4)
df_5MC <- read.csv("../data/new_exposure_files/PAH31_5MC.csv")
names(df_5MC)[2] <- "5MC"
df <- merge(df, df_5MC, by = "SbjctD", all.x=T)
var_name_list$PCH_5MC <- "5MC"
unique(df$SbjctD)
length(unique(df$SbjctD))
sum(df$Visit == 2)
sum(df$Visit == 1)
length(unique(df$SbjctD[df$Visit==1]))
df$SbjctD[duplicated(df$SbjctD)]
length(df$SbjctD[duplicated(df$SbjctD)])
length(unique(df$SbjctD[duplicated(df$SbjctD)]))
length(unique(df$SbjctD[df$Visit==1]))
101 + 23
table(df$Visit)
sum(is.na(df$SbjctD))
dup <- df$SbjctD[duplicated(df$SbjctD)]
sum(df$SbjctD %in% dup)
sum(df$SbjctD %in% dup & df$Visit == 1)
sum(df$SbjctD %in% dup & df$Visit == 2)
sum((!df$SbjctD %in% dup) & df$Visit == 2)
sum((!df$SbjctD %in% dup) & df$Visit == 1)
23+78
5+23
78+5
23+23
23+101
df$SbjctD[(!df$SbjctD %in% dup) & df$Visit == 2]
View(df)
length(unique(df$SbjctD))
129-106
df_sub1 <- df[(df$SbjctD %in% dup_sbjctD & df$Visit == 1) | (! df$SbjctD %in% dup_sbjctD)]
df_sub1 <- df[(df$SbjctD %in% dup_sbjctD & df$Visit == 1) | (! df$SbjctD %in% dup_sbjctD),]
df_sub1 <- df[(df$SbjctD %in% dup_sbjctD & df$Visit == 1) | (! df$SbjctD %in% dup_sbjctD),]
dup_sbjctD <- df$SbjctD[duplicated(df$SbjctD)]
df_sub1 <- df[(df$SbjctD %in% dup_sbjctD & df$Visit == 1) | (! df$SbjctD %in% dup_sbjctD),]
df_sub2 <- df[(df$SbjctD %in% dup_sbjctD & df$Visit == 2) | (! df$SbjctD %in% dup_sbjctD),]
df_sub1 %>%
select(var_name_list$PCH_5MC, curFuel) %>%
tbl_summary(by = curFuel,
# type = all_continuous() ~ "continuous2",
statistic=list(all_continuous() ~ "{median} ({p25}, {p75})"),
digits = list(  ~ c(2, 1, 1)),
missing_text = "(Missing)") %>%
add_overall()
lm_coef_ambient <- data.frame()
lm_coef_ambient_plots <- list()
for(j in 1:length(var_name_list$PCH_5MC)){
plot_df <- data.frame(matrix(NA, ncol = 4))
for(i in 1:length(EAAs_vars)){
rlts = preform_regression(Y = EAAs_vars[i], X = ambient_exp_vars[j], adjust_cfd = T)
lm_coef_ambient[i,j] <- rlts[1]
plot_df[i,] <- rlts[c(2,3,4,5)]
}
colnames(plot_df) <- c("coefficient", "cl_lower", "cl_upper", "p_val")
rownames(plot_df) <- EAAs_vars
plot_df$EAAs <- EAAs_names
plot_df$EAAs <- factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
plot_df$coefficient = as.numeric(plot_df$coefficient)
plot_df$cl_lower = as.numeric(plot_df$cl_lower)
plot_df$cl_upper = as.numeric(plot_df$cl_upper)
pj <- make_forest_plot(plot_df, ambient_exp_label[j])
lm_coef_ambient_plots[[j]] = pj
}
library(lmtest)
preform_lmtest_mix <- function(Y, X, log_trans_X = F) {
tmp <- df
for(i in 1:length(X)){
X_i <- X[i]
tmp <- tmp[!is.na(tmp[,X_i]),]
if(log_trans_X) {
tmp[,X_i] <- log(tmp[,X_i])
}
}
X_form <- paste(X, collapse  = " + ")
form_full <- as.formula(paste0(Y," ~ ", X_form, " + ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"))
lmfit_full <- lm(form_full, data = tmp)
form_reduced <- as.formula(paste0(Y," ~ ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"))
lmfit_reduced <- lm(form_reduced, data = tmp)
lrtest <- lrtest(lmfit_full, lmfit_reduced)
return(round(lrtest$`Pr(>Chisq)`, 4)[2])
}
preform_lmtest_simple <- function(Y, X, dat = df, log_trans_X = F) {
tmp <- dat
for(i in 1:length(X)){
X_i <- X[i]
tmp <- tmp[!is.na(tmp[,X_i]),]
if(log_trans_X) {
tmp[,X_i] <- log(tmp[,X_i])
}
}
X_form <- paste(X, collapse  = " + ")
form_full <- as.formula(paste0(Y," ~ ", X_form))
lmfit_full <- lm(form_full, data = tmp)
form_reduced <- as.formula(paste0(Y," ~ 1"))
lmfit_reduced <- lm(form_reduced, data = tmp)
lrtest <- lrtest(lmfit_full, lmfit_reduced)
return(round(lrtest$`Pr(>Chisq)`, 4)[2])
}
preform_regression <- function(Y, X, log_trans_X = F, adjust_cfd = F) {
tmp <- df[!is.na(df[,X]),]
if(log_trans_X) {
tmp[,X] <- log(tmp[,X])
}
form <- ifelse(adjust_cfd,
paste0(Y," ~ ", X, " + ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"),
paste0(Y,"~",X))
form <- as.formula(form)
lmfit <- lm(form, data = tmp)
coef <- summary(lmfit)$coefficients[2,1]
coef_text <- as.character(round(coef,4))
std <- summary(lmfit)$coefficients[2,2]
std_text <- as.character(round(std,4))
p_val <- summary(lmfit)$coefficients[2,4]
sig_star <- ifelse(p_val<0.001, "***",
ifelse(p_val<0.01, "** ",
ifelse(p_val<0.05, "*  ", "   ")))
sig <- ifelse(p_val <= 0.001, "<= 0.001",
ifelse(p_val <= 0.01, "<= 0.01",
ifelse(p_val <= 0.05, "<= 0.05", "> 0.05")))
rlt <- paste0(coef_text, paste0(rep(" ", 7-nchar(coef_text)), collapse = ""),
sig_star,
"(", std_text, paste0(rep(" ", 6-nchar(std_text)), collapse = ""), ")")
cl_l <- coef - 1.96 * std
cl_u <- coef + 1.96 * std
return(c(rlt, coef, cl_l, cl_u, sig))
}
preform_regression_exposure_prototype <- function(X, Y, log_trans_X=F) {
tmp <- df
for(i in 1:length(X)){
X_i <- X[i]
tmp <- tmp[!is.na(tmp[,X_i]),]
if(log_trans_X) {
tmp[,X_i] <- log(tmp[,X_i])
}
}
X_form <- paste(X, collapse  = " + ")
tmp <- tmp[tmp$Group == "LEX", ]
form <- as.formula(paste0(Y," ~ ", X_form, " + ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"))
lmfit <- lm(form, data = tmp)
coefs <- as.data.frame(summary(lmfit)$coefficients)
colnames(coefs) <- c("coefficient", "std", "t_val", "pval")
coefs$pval_BHadj <- p.adjust(coefs$pval, method = "BH")
coefs <- coefs %>%
select(coefficient, std, pval, pval_BHadj) %>%
mutate(cl_lower = coefficient - 1.96 * std,
cl_upper = coefficient + 1.96 * std,
p_val = ifelse(pval <= 0.001, "<= 0.001",
ifelse(pval <= 0.01, "<= 0.01",
ifelse(pval <= 0.05, "<= 0.05", "> 0.05")))) %>%
select(coefficient, std, cl_lower, cl_upper, pval, p_val, pval_BHadj)
return(coefs)
}
sig_color <- c("<= 0.001" = "#7CAE00", "<= 0.01" = "#00BFC4", "<= 0.05" = "#C77CFF", "> 0.05" = "black")
make_forest_plot <- function(df, exposure){
df$p_val <- as.factor(df$p_val)
p <- ggplot(data=df, aes(x=EAAs, y=coefficient, ymin=cl_lower, ymax=cl_upper)) +
geom_point(shape=24, size=2, aes(col = p_val, fill = p_val)) +
geom_errorbar(shape=24, width=0.3, aes(col = p_val)) +
geom_hline(yintercept=0, lty=2,color="red") +  # add a dotted line at x=1 after flip
# ylim(c(-2,2)) +  # not working
coord_flip() +  # flip coordinates (puts labels on y axis)
labs(x=expression(log[2]-PFAS))+
labs(y="Change in year") +
ggtitle(exposure)+
theme(plot.title = element_text(size=8.6, hjust = 0.5),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.y = element_text(size=8),
axis.title.x = element_text(size=8),
axis.text = element_text(size=7)) +
scale_color_manual(values = sig_color) +
scale_fill_manual(values = sig_color)
return(p)
}
make_forest_plot_lg <- function(df, exposure){
df$p_val <- as.factor(df$p_val)
p <- ggplot(data=df, aes(x=EAAs, y=coefficient, ymin=cl_lower, ymax=cl_upper)) +
geom_point(shape=24, size=2, aes(col = p_val, fill = p_val)) +
geom_errorbar(shape=24, width=0.3, aes(col = p_val)) +
geom_hline(yintercept=0, lty=2,color="red") +  # add a dotted line at x=1 after flip
# ylim(c(-2,2)) +  # not working
coord_flip() +  # flip coordinates (puts labels on y axis)
labs(x=expression(log[2]-PFAS))+
labs(y="Change in year") +
ggtitle(exposure)+
theme(plot.title = element_text(size=15, hjust = 0.5),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.text = element_text(size=10)) +
scale_color_manual(values = sig_color) +
scale_fill_manual(values = sig_color)
return(p)
}
options(scipen = 999)
for(j in 1:length(var_name_list$PCH_5MC)){
plot_df <- data.frame(matrix(NA, ncol = 4))
for(i in 1:length(EAAs_vars)){
rlts = preform_regression(Y = EAAs_vars[i], X = ambient_exp_vars[j], adjust_cfd = T)
lm_coef_ambient[i,j] <- rlts[1]
plot_df[i,] <- rlts[c(2,3,4,5)]
}
colnames(plot_df) <- c("coefficient", "cl_lower", "cl_upper", "p_val")
rownames(plot_df) <- EAAs_vars
plot_df$EAAs <- EAAs_names
plot_df$EAAs <- factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
plot_df$coefficient = as.numeric(plot_df$coefficient)
plot_df$cl_lower = as.numeric(plot_df$cl_lower)
plot_df$cl_upper = as.numeric(plot_df$cl_upper)
pj <- make_forest_plot(plot_df, ambient_exp_label[j])
lm_coef_ambient_plots[[j]] = pj
}
lm_coef_ambient[9,1] <- c("[P<0.001: ***; P<0.01: **; P<0.05: *]")
colnames(lm_coef_ambient) <- ambient_exp_names
rownames(lm_coef_ambient) <- c(EAAs_names, "")
colnames(lm_coef_ambient) <- "5MC"
lm_coef_ambient
lm_coef_ambient_plots
lm_coef_ambient_plots
lm_coef_ambient_plots
pj <- make_forest_plot(plot_df, "5MC")
lm_coef_ambient_plots[[j]] = pj
lm_coef_ambient_plots
preform_regression <- function(Y, X, log_trans_X = F, adjust_cfd = F, dat = df) {
tmp <- dat[!is.na(dat[,X]),]
if(log_trans_X) {
tmp[,X] <- log(tmp[,X])
}
form <- ifelse(adjust_cfd,
paste0(Y," ~ ", X, " + ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"),
paste0(Y,"~",X))
form <- as.formula(form)
lmfit <- lm(form, data = tmp)
coef <- summary(lmfit)$coefficients[2,1]
coef_text <- as.character(round(coef,4))
std <- summary(lmfit)$coefficients[2,2]
std_text <- as.character(round(std,4))
p_val <- summary(lmfit)$coefficients[2,4]
sig_star <- ifelse(p_val<0.001, "***",
ifelse(p_val<0.01, "** ",
ifelse(p_val<0.05, "*  ", "   ")))
sig <- ifelse(p_val <= 0.001, "<= 0.001",
ifelse(p_val <= 0.01, "<= 0.01",
ifelse(p_val <= 0.05, "<= 0.05", "> 0.05")))
rlt <- paste0(coef_text, paste0(rep(" ", 7-nchar(coef_text)), collapse = ""),
sig_star,
"(", std_text, paste0(rep(" ", 6-nchar(std_text)), collapse = ""), ")")
cl_l <- coef - 1.96 * std
cl_u <- coef + 1.96 * std
return(c(rlt, coef, cl_l, cl_u, sig))
}
df_subs <- list("df_sub1" = df[(df$SbjctD %in% dup_sbjctD & df$Visit == 1) | (! df$SbjctD %in% dup_sbjctD),],
"df_sub2" = df[(df$SbjctD %in% dup_sbjctD & df$Visit == 2) | (! df$SbjctD %in% dup_sbjctD),])
str(df_subs)
dup_sbjctD <- df$SbjctD[duplicated(df$SbjctD)]
df_subs <- list("df_sub1" = df[(df$SbjctD %in% dup_sbjctD & df$Visit == 1) | (! df$SbjctD %in% dup_sbjctD),],
"df_sub2" = df[(df$SbjctD %in% dup_sbjctD & df$Visit == 2) | (! df$SbjctD %in% dup_sbjctD),])
str(df_subs[[1]])
df_subs[[1]] %>%
select(var_name_list$PCH_5MC, curFuel) %>%
tbl_summary(by = curFuel,
# type = all_continuous() ~ "continuous2",
statistic=list(all_continuous() ~ "{median} ({p25}, {p75})"),
digits = list(  ~ c(2, 1, 1)),
missing_text = "(Missing)") %>%
add_overall()
lm_coef_ambient <- data.frame()
lm_coef_ambient_plots <- list()
for(j in 1:2){
plot_df <- data.frame(matrix(NA, ncol = 4))
for(i in 1:length(EAAs_vars)){
rlts = preform_regression(Y = EAAs_vars[i], X = var_name_list$PCH_5MC, adjust_cfd = T, dat=df_subs[[j]])
lm_coef_ambient[i,j] <- rlts[1]
plot_df[i,] <- rlts[c(2,3,4,5)]
}
colnames(plot_df) <- c("coefficient", "cl_lower", "cl_upper", "p_val")
rownames(plot_df) <- EAAs_vars
plot_df$EAAs <- EAAs_names
plot_df$EAAs <- factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
plot_df$coefficient = as.numeric(plot_df$coefficient)
plot_df$cl_lower = as.numeric(plot_df$cl_lower)
plot_df$cl_upper = as.numeric(plot_df$cl_upper)
pj <- make_forest_plot(plot_df, "5MC")
lm_coef_ambient_plots[[j]] = pj
}
df_subs[[2]] %>%
select(PCH_5MC, curFuel) %>%
tbl_summary(by = curFuel,
# type = all_continuous() ~ "continuous2",
statistic=list(all_continuous() ~ "{median} ({p25}, {p75})"),
digits = list(  ~ c(2, 1, 1)),
missing_text = "(Missing)") %>%
add_overall()
setwd("/Users/seraphinashi/Desktop/Projects/PAHS/Xuanwei Study coal and DNA metylation study/Seraphina's folder/PAHS-scripts")
plotFolder <- "../images/03_analysis/"
if(!file.exists(plotFolder)) dir.create(plotFolder,recursive=TRUE)
knitr::opts_chunk$set(
cache=FALSE, autodep=FALSE, warning=FALSE, message=FALSE, echo=FALSE,
results = 'markup', dev='png', dpi=150, fig.align = "center", fig.path=plotFolder,
cache.path=".cache/",
duplicate.label="allow"
)
source('shared_commands.R')
df <- read.csv("../data/data_cleaned.csv") %>% select(-X)
library(lmtest)
preform_lmtest_mix <- function(Y, X, log_trans_X = F) {
tmp <- df
for(i in 1:length(X)){
X_i <- X[i]
tmp <- tmp[!is.na(tmp[,X_i]),]
if(log_trans_X) {
tmp[,X_i] <- log(tmp[,X_i])
}
}
X_form <- paste(X, collapse  = " + ")
form_full <- as.formula(paste0(Y," ~ ", X_form, " + ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"))
lmfit_full <- lm(form_full, data = tmp)
form_reduced <- as.formula(paste0(Y," ~ ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"))
lmfit_reduced <- lm(form_reduced, data = tmp)
lrtest <- lrtest(lmfit_full, lmfit_reduced)
return(round(lrtest$`Pr(>Chisq)`, 4)[2])
}
preform_lmtest_simple <- function(Y, X, dat = df, log_trans_X = F) {
tmp <- dat
for(i in 1:length(X)){
X_i <- X[i]
tmp <- tmp[!is.na(tmp[,X_i]),]
if(log_trans_X) {
tmp[,X_i] <- log(tmp[,X_i])
}
}
X_form <- paste(X, collapse  = " + ")
form_full <- as.formula(paste0(Y," ~ ", X_form))
lmfit_full <- lm(form_full, data = tmp)
form_reduced <- as.formula(paste0(Y," ~ 1"))
lmfit_reduced <- lm(form_reduced, data = tmp)
lrtest <- lrtest(lmfit_full, lmfit_reduced)
return(round(lrtest$`Pr(>Chisq)`, 4)[2])
}
preform_regression <- function(Y, X, log_trans_X = F, adjust_cfd = F, dat = df) {
tmp <- dat[!is.na(dat[,X]),]
if(log_trans_X) {
tmp[,X] <- log(tmp[,X])
}
form <- ifelse(adjust_cfd,
paste0(Y," ~ ", X, " + ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"),
paste0(Y,"~",X))
form <- as.formula(form)
lmfit <- lm(form, data = tmp)
coef <- summary(lmfit)$coefficients[2,1]
coef_text <- as.character(round(coef,4))
std <- summary(lmfit)$coefficients[2,2]
std_text <- as.character(round(std,4))
p_val <- summary(lmfit)$coefficients[2,4]
sig_star <- ifelse(p_val<0.001, "***",
ifelse(p_val<0.01, "** ",
ifelse(p_val<0.05, "*  ", "   ")))
sig <- ifelse(p_val <= 0.001, "<= 0.001",
ifelse(p_val <= 0.01, "<= 0.01",
ifelse(p_val <= 0.05, "<= 0.05", "> 0.05")))
rlt <- paste0(coef_text, paste0(rep(" ", 7-nchar(coef_text)), collapse = ""),
sig_star,
"(", std_text, paste0(rep(" ", 6-nchar(std_text)), collapse = ""), ")")
cl_l <- coef - 1.96 * std
cl_u <- coef + 1.96 * std
return(c(rlt, coef, cl_l, cl_u, sig))
}
preform_regression_exposure_prototype <- function(X, Y, log_trans_X=F) {
tmp <- df
for(i in 1:length(X)){
X_i <- X[i]
tmp <- tmp[!is.na(tmp[,X_i]),]
if(log_trans_X) {
tmp[,X_i] <- log(tmp[,X_i])
}
}
X_form <- paste(X, collapse  = " + ")
tmp <- tmp[tmp$Group == "LEX", ]
form <- as.formula(paste0(Y," ~ ", X_form, " + ", paste(var_name_list$confounders[-1], collapse  = " + "), " + curStove"))
lmfit <- lm(form, data = tmp)
coefs <- as.data.frame(summary(lmfit)$coefficients)
colnames(coefs) <- c("coefficient", "std", "t_val", "pval")
coefs$pval_BHadj <- p.adjust(coefs$pval, method = "BH")
coefs <- coefs %>%
select(coefficient, std, pval, pval_BHadj) %>%
mutate(cl_lower = coefficient - 1.96 * std,
cl_upper = coefficient + 1.96 * std,
p_val = ifelse(pval <= 0.001, "<= 0.001",
ifelse(pval <= 0.01, "<= 0.01",
ifelse(pval <= 0.05, "<= 0.05", "> 0.05")))) %>%
select(coefficient, std, cl_lower, cl_upper, pval, p_val, pval_BHadj)
return(coefs)
}
sig_color <- c("<= 0.001" = "#7CAE00", "<= 0.01" = "#00BFC4", "<= 0.05" = "#C77CFF", "> 0.05" = "black")
make_forest_plot <- function(df, exposure){
df$p_val <- as.factor(df$p_val)
p <- ggplot(data=df, aes(x=EAAs, y=coefficient, ymin=cl_lower, ymax=cl_upper)) +
geom_point(shape=24, size=2, aes(col = p_val, fill = p_val)) +
geom_errorbar(shape=24, width=0.3, aes(col = p_val)) +
geom_hline(yintercept=0, lty=2,color="red") +  # add a dotted line at x=1 after flip
# ylim(c(-2,2)) +  # not working
coord_flip() +  # flip coordinates (puts labels on y axis)
labs(x=expression(log[2]-PFAS))+
labs(y="Change in year") +
ggtitle(exposure)+
theme(plot.title = element_text(size=8.6, hjust = 0.5),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.y = element_text(size=8),
axis.title.x = element_text(size=8),
axis.text = element_text(size=7)) +
scale_color_manual(values = sig_color) +
scale_fill_manual(values = sig_color)
return(p)
}
make_forest_plot_lg <- function(df, exposure){
df$p_val <- as.factor(df$p_val)
p <- ggplot(data=df, aes(x=EAAs, y=coefficient, ymin=cl_lower, ymax=cl_upper)) +
geom_point(shape=24, size=2, aes(col = p_val, fill = p_val)) +
geom_errorbar(shape=24, width=0.3, aes(col = p_val)) +
geom_hline(yintercept=0, lty=2,color="red") +  # add a dotted line at x=1 after flip
# ylim(c(-2,2)) +  # not working
coord_flip() +  # flip coordinates (puts labels on y axis)
labs(x=expression(log[2]-PFAS))+
labs(y="Change in year") +
ggtitle(exposure)+
theme(plot.title = element_text(size=15, hjust = 0.5),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.text = element_text(size=10)) +
scale_color_manual(values = sig_color) +
scale_fill_manual(values = sig_color)
return(p)
}
options(scipen = 999)
df$SbjctD[is.na(df$SbjctD)] <- substr(df$SID[is.na(df$SbjctD)], 5, 7)
df$Visit[is.na(df$Visit)] <- substr(df$SID[is.na(df$Visit)], 4, 4)
df_5MC <- read.csv("../data/new_exposure_files/PAH31_5MC.csv")
names(df_5MC)[2] <- "PCH_5MC"
df <- merge(df, df_5MC, by = "SbjctD", all.x=T)
var_name_list$PCH_5MC <- "PCH_5MC"
dup_sbjctD <- df$SbjctD[duplicated(df$SbjctD)]
df_subs <- list("df_sub1" = df[(df$SbjctD %in% dup_sbjctD & df$Visit == 1) | (! df$SbjctD %in% dup_sbjctD),],
"df_sub2" = df[(df$SbjctD %in% dup_sbjctD & df$Visit == 2) | (! df$SbjctD %in% dup_sbjctD),])
df_subs[[1]] %>%
select(PCH_5MC, curFuel) %>%
tbl_summary(by = curFuel,
# type = all_continuous() ~ "continuous2",
statistic=list(all_continuous() ~ "{median} ({p25}, {p75})"),
digits = list(  ~ c(2, 1, 1)),
missing_text = "(Missing)") %>%
add_overall()
df_subs[[2]] %>%
select(PCH_5MC, curFuel) %>%
tbl_summary(by = curFuel,
# type = all_continuous() ~ "continuous2",
statistic=list(all_continuous() ~ "{median} ({p25}, {p75})"),
digits = list(  ~ c(2, 1, 1)),
missing_text = "(Missing)") %>%
add_overall()
lm_coef_ambient <- data.frame()
lm_coef_ambient_plots <- list()
for(j in 1:2){
plot_df <- data.frame(matrix(NA, ncol = 4))
for(i in 1:length(EAAs_vars)){
rlts = preform_regression(Y = EAAs_vars[i], X = var_name_list$PCH_5MC, adjust_cfd = T, dat=df_subs[[j]])
lm_coef_ambient[i,j] <- rlts[1]
plot_df[i,] <- rlts[c(2,3,4,5)]
}
colnames(plot_df) <- c("coefficient", "cl_lower", "cl_upper", "p_val")
rownames(plot_df) <- EAAs_vars
plot_df$EAAs <- EAAs_names
plot_df$EAAs <- factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
plot_df$coefficient = as.numeric(plot_df$coefficient)
plot_df$cl_lower = as.numeric(plot_df$cl_lower)
plot_df$cl_upper = as.numeric(plot_df$cl_upper)
pj <- make_forest_plot(plot_df, "5MC")
lm_coef_ambient_plots[[j]] = pj
}
lm_coef_ambient[9,1] <- c("[P<0.001: ***; P<0.01: **; P<0.05: *]")
colnames(lm_coef_ambient) <- "5MC"
rownames(lm_coef_ambient) <- c(EAAs_names, "")
lm_coef_ambient_plots[[1]]
lm_coef_ambient_plots[[1]]
lm_coef_ambient_plots[[1]]
lm_coef_ambient_plots[[1]]
df_subs[[1]] %>%
select(PCH_5MC, curFuel, unname(unlist(var_name_list$EEAs))) %>%
tbl_summary(by = curFuel,
# type = all_continuous() ~ "continuous2",
statistic=list(all_continuous() ~ "{median} ({p25}, {p75})"),
digits = list(  ~ c(2, 1, 1)),
missing_text = "(Missing)") %>%
add_overall()
setwd("/Users/seraphinashi/Desktop/Projects/PAHS/Xuanwei Study coal and DNA metylation study/Seraphina's folder/PAHS-scripts")
plotFolder <- "../images/03_analysis/"
if(!file.exists(plotFolder)) dir.create(plotFolder,recursive=TRUE)
knitr::opts_chunk$set(
cache=FALSE, autodep=FALSE, warning=FALSE, message=FALSE, echo=FALSE,
results = 'markup', dev='png', dpi=150, fig.align = "center", fig.path=plotFolder,
cache.path=".cache/",
duplicate.label="allow"
)
source('shared_commands.R')
df <- read.csv("../data/data_cleaned.csv") %>% select(-X)
View(df)
