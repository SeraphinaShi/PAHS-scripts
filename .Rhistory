p5 <- make_forest_plot_lg(coef5, "CHLD5_SO2")
plot_list <- list(p1, p2, p3, p4, p5)
for(j in 1:5){
# plot_list[[j]] <- plot_list[[j]] + ylim(c(-4, 3.5))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on childhood pollutant exposures"),
gp=gpar(fontsize=15, fontface = 'bold')))
for(j in 1:5){
plot_list[[j]] <- plot_list[[j]] + ylim(c(-2.5, 3))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on childhood pollutant exposures"),
gp=gpar(fontsize=15, fontface = 'bold')))
coefs_list <- list(coef1, coef2, coef3, coef4, coef5)
names(coefs_list) <- var_name_list$cluster_exp$clusCHLD5
cat("The estimated effects:")
for(j in 1:6){
coefs_list[[j]] <- coefs_list[[j]][, -7] %>%
mutate(coefficient = round(coefficient, 4),
std = round(as.numeric(std), 4),
ci_lower = round(ci_lower, 4),
ci_upper = round(ci_upper, 4),
p_val = round(as.numeric(p_val), 4))
}
coefs_list <- list(coef1, coef2, coef3, coef4, coef5)
names(coefs_list) <- var_name_list$cluster_exp$clusCHLD5
cat("The estimated effects:")
for(j in 1:5){
coefs_list[[j]] <- coefs_list[[j]][, -7] %>%
mutate(coefficient = round(coefficient, 4),
std = round(as.numeric(std), 4),
ci_lower = round(ci_lower, 4),
ci_upper = round(ci_upper, 4),
p_val = round(as.numeric(p_val), 4))
}
print(coefs_list)
coevar_name_list$cluster_exp$clusCUM6
var_name_list$cluster_exp$clusCUM6
coef1 <- data.frame(matrix(NA, ncol = 6))
coef2 <- data.frame(matrix(NA, ncol = 6))
coef3 <- data.frame(matrix(NA, ncol = 6))
coef4 <- data.frame(matrix(NA, ncol = 6))
coef5 <- data.frame(matrix(NA, ncol = 6))
coef6 <- data.frame(matrix(NA, ncol = 6))
for(i in 1:length(var_name_list$EEAs)){
rlts = preform_gee_exposure_prototype(X = var_name_list$cluster_exp$clusCUM6,
Y = var_name_list$EEAs[i])
coef1[i,] <- rlts[2,]
coef2[i,] <- rlts[3,]
coef3[i,] <- rlts[4,]
coef4[i,] <- rlts[5,]
coef5[i,] <- rlts[6,]
coef6[i,] <- rlts[7,]
}
colnames(coef1) = colnames(rlts)
colnames(coef2) = colnames(rlts)
colnames(coef3) = colnames(rlts)
colnames(coef4) = colnames(rlts)
colnames(coef5) = colnames(rlts)
colnames(coef6) = colnames(rlts)
rownames(coef1) = var_name_list$EEAs
rownames(coef2) = var_name_list$EEAs
rownames(coef3) = var_name_list$EEAs
rownames(coef4) = var_name_list$EEAs
rownames(coef5) = var_name_list$EEAs
rownames(coef6) = var_name_list$EEAs
coef1$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef2$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef3$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef4$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef5$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef6$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
p1 <- make_forest_plot_lg(coef1, "CUR6_BC_PAH6")
p2 <- make_forest_plot_lg(coef2, "CUR6_PAH31")
p3 <- make_forest_plot_lg(coef3, "CUR6_NkF")
p4 <- make_forest_plot_lg(coef4, "CUR6_PM_RET")
p5 <- make_forest_plot_lg(coef5, "CUR6_NO2")
p6 <- make_forest_plot_lg(coef6, "CUR6_SO2")
plot_list <- list(p1, p2, p3, p4, p5, p6)
for(j in 1:6){
#plot_list[[j]] <- plot_list[[j]] + ylim(c(-4, 3.5))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on cumulative pollutant exposures"),
gp=gpar(fontsize=15, fontface = 'bold')))
for(j in 1:6){
plot_list[[j]] <- plot_list[[j]] + ylim(c(-2.5, 3.5))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on cumulative pollutant exposures"),
gp=gpar(fontsize=15, fontface = 'bold')))
coefs_list <- list(coef1, coef2, coef3, coef4, coef5, coef6)
names(coefs_list) <- var_name_list$cluster_exp$clusCUR6
cat("The estimated effects:")
for(j in 1:6){
coefs_list[[j]] <- coefs_list[[j]][, -7] %>%
mutate(coefficient = round(coefficient, 4),
std = round(as.numeric(std), 4),
ci_lower = round(ci_lower, 4),
ci_upper = round(ci_upper, 4),
p_val = round(as.numeric(p_val), 4))
}
print(coefs_list)
coefs_list <- list(coef1, coef2, coef3, coef4, coef5, coef6)
names(coefs_list) <- var_name_list$cluster_exp$clusCUM6
cat("The estimated effects:")
for(j in 1:6){
coefs_list[[j]] <- coefs_list[[j]][, -7] %>%
mutate(coefficient = round(coefficient, 4),
std = round(as.numeric(std), 4),
ci_lower = round(ci_lower, 4),
ci_upper = round(ci_upper, 4),
p_val = round(as.numeric(p_val), 4))
}
print(coefs_list)
var_name_list$cluster_exp$clusMEAS6
var_name_list$cluster_exp$clusCUM6
coef1 <- data.frame(matrix(NA, ncol = 6))
coef2 <- data.frame(matrix(NA, ncol = 6))
coef3 <- data.frame(matrix(NA, ncol = 6))
coef4 <- data.frame(matrix(NA, ncol = 6))
coef5 <- data.frame(matrix(NA, ncol = 6))
coef6 <- data.frame(matrix(NA, ncol = 6))
for(i in 1:length(var_name_list$EEAs)){
rlts = preform_gee_exposure_prototype(X = var_name_list$cluster_exp$clusMEAS6,
Y = var_name_list$EEAs[i])
coef1[i,] <- rlts[2,]
coef2[i,] <- rlts[3,]
coef3[i,] <- rlts[4,]
coef4[i,] <- rlts[5,]
coef5[i,] <- rlts[6,]
coef6[i,] <- rlts[7,]
}
colnames(coef1) = colnames(rlts)
colnames(coef2) = colnames(rlts)
colnames(coef3) = colnames(rlts)
colnames(coef4) = colnames(rlts)
colnames(coef5) = colnames(rlts)
colnames(coef6) = colnames(rlts)
rownames(coef1) = var_name_list$EEAs
rownames(coef2) = var_name_list$EEAs
rownames(coef3) = var_name_list$EEAs
rownames(coef4) = var_name_list$EEAs
rownames(coef5) = var_name_list$EEAs
rownames(coef6) = var_name_list$EEAs
coef1$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef2$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef3$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef4$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef5$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef6$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
p1 <- make_forest_plot_lg(coef1, "MEAS6_BC_PM_RET")
p2 <- make_forest_plot_lg(coef2, "MEAS6_X31")
p3 <- make_forest_plot_lg(coef3, "MEAS6_X5")
p4 <- make_forest_plot_lg(coef4, "MEAS6_DlP")
p5 <- make_forest_plot_lg(coef5, "MEAS6_NkF")
p6 <- make_forest_plot_lg(coef6, "MEAS6_NO2_SO2")
plot_list <- list(p1, p2, p3, p4, p5, p6)
for(j in 1:6){
#plot_list[[j]] <- plot_list[[j]] + ylim(c(-4, 3.5))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on measured pollutant exposures"),
gp=gpar(fontsize=15, fontface = 'bold')))
coef1 <- data.frame(matrix(NA, ncol = 6))
coef2 <- data.frame(matrix(NA, ncol = 6))
coef3 <- data.frame(matrix(NA, ncol = 6))
coef4 <- data.frame(matrix(NA, ncol = 6))
coef5 <- data.frame(matrix(NA, ncol = 6))
coef6 <- data.frame(matrix(NA, ncol = 6))
for(i in 1:length(var_name_list$EEAs)){
rlts = preform_gee_exposure_prototype(X = var_name_list$cluster_exp$clusMEAS6,
Y = var_name_list$EEAs[i])
coef1[i,] <- rlts[2,]
coef2[i,] <- rlts[3,]
coef3[i,] <- rlts[4,]
coef4[i,] <- rlts[5,]
coef5[i,] <- rlts[6,]
coef6[i,] <- rlts[7,]
}
colnames(coef1) = colnames(rlts)
colnames(coef2) = colnames(rlts)
colnames(coef3) = colnames(rlts)
colnames(coef4) = colnames(rlts)
colnames(coef5) = colnames(rlts)
colnames(coef6) = colnames(rlts)
rownames(coef1) = var_name_list$EEAs
rownames(coef2) = var_name_list$EEAs
rownames(coef3) = var_name_list$EEAs
rownames(coef4) = var_name_list$EEAs
rownames(coef5) = var_name_list$EEAs
rownames(coef6) = var_name_list$EEAs
coef1$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef2$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef3$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef4$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef5$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef6$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
p1 <- make_forest_plot_lg(coef1, "MEAS6_BC_PM_RET")
p2 <- make_forest_plot_lg(coef2, "MEAS6_X31")
p3 <- make_forest_plot_lg(coef3, "MEAS6_X5")
p4 <- make_forest_plot_lg(coef4, "MEAS6_DlP")
p5 <- make_forest_plot_lg(coef5, "MEAS6_NkF")
p6 <- make_forest_plot_lg(coef6, "MEAS6_NO2_SO2")
plot_list <- list(p1, p2, p3, p4, p5, p6)
for(j in 1:6){
plot_list[[j]] <- plot_list[[j]] + ylim(c(-6, 6))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on measured pollutant exposures"),
gp=gpar(fontsize=15, fontface = 'bold')))
coefs_list <- list(coef1, coef2, coef3, coef4, coef5, coef6)
names(coefs_list) <- var_name_list$cluster_exp$clusMEAS6
cat("The estimated effects:")
for(j in 1:6){
coefs_list[[j]] <- coefs_list[[j]][, -7] %>%
mutate(coefficient = round(coefficient, 4),
std = round(as.numeric(std), 4),
ci_lower = round(ci_lower, 4),
ci_upper = round(ci_upper, 4),
p_val = round(as.numeric(p_val), 4))
}
print(coefs_list)
var_name_list$cluster_exp$clusURI5
coef1 <- data.frame(matrix(NA, ncol = 6))
coef2 <- data.frame(matrix(NA, ncol = 6))
coef3 <- data.frame(matrix(NA, ncol = 6))
coef4 <- data.frame(matrix(NA, ncol = 6))
coef5 <- data.frame(matrix(NA, ncol = 6))
for(i in 1:length(var_name_list$EEAs)){
rlts = preform_gee_exposure_prototype(X = var_name_list$cluster_exp$clusURI5,
Y = var_name_list$EEAs[i])
coef1[i,] <- rlts[2,]
coef2[i,] <- rlts[3,]
coef3[i,] <- rlts[4,]
coef4[i,] <- rlts[5,]
coef5[i,] <- rlts[6,]
}
colnames(coef1) = colnames(rlts)
colnames(coef2) = colnames(rlts)
colnames(coef3) = colnames(rlts)
colnames(coef4) = colnames(rlts)
colnames(coef5) = colnames(rlts)
rownames(coef1) = var_name_list$EEAs
rownames(coef2) = var_name_list$EEAs
rownames(coef3) = var_name_list$EEAs
rownames(coef4) = var_name_list$EEAs
rownames(coef5) = var_name_list$EEAs
coef1$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef2$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef3$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef4$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef5$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
p1 <- make_forest_plot_lg(coef1, "URI5_NAP_1M_2M")
p2 <- make_forest_plot_lg(coef2, "URI5_ACE")
p3 <- make_forest_plot_lg(coef3, "URI5_FLU_PHE")
p4 <- make_forest_plot_lg(coef4, "URI5_PYR")
p5 <- make_forest_plot_lg(coef5, "URI5_CHR")
plot_list <- list(p1, p2, p3, p4, p5)
for(j in 1:5){
# plot_list[[j]] <- plot_list[[j]] + ylim(c(-4, 3.5))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on measured urinary biomarkers"),
gp=gpar(fontsize=15, fontface = 'bold')))
coef1 <- data.frame(matrix(NA, ncol = 6))
coef2 <- data.frame(matrix(NA, ncol = 6))
coef3 <- data.frame(matrix(NA, ncol = 6))
coef4 <- data.frame(matrix(NA, ncol = 6))
coef5 <- data.frame(matrix(NA, ncol = 6))
for(i in 1:length(var_name_list$EEAs)){
rlts = preform_gee_exposure_prototype(X = var_name_list$cluster_exp$clusURI5,
Y = var_name_list$EEAs[i])
coef1[i,] <- rlts[2,]
coef2[i,] <- rlts[3,]
coef3[i,] <- rlts[4,]
coef4[i,] <- rlts[5,]
coef5[i,] <- rlts[6,]
}
colnames(coef1) = colnames(rlts)
colnames(coef2) = colnames(rlts)
colnames(coef3) = colnames(rlts)
colnames(coef4) = colnames(rlts)
colnames(coef5) = colnames(rlts)
rownames(coef1) = var_name_list$EEAs
rownames(coef2) = var_name_list$EEAs
rownames(coef3) = var_name_list$EEAs
rownames(coef4) = var_name_list$EEAs
rownames(coef5) = var_name_list$EEAs
coef1$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef2$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef3$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef4$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
coef5$EAAs = factor(EAAs_names, levels=rev(c(EAAs_names[EAAs_names != "DNAmTL"], "DNAmTL")))
p1 <- make_forest_plot_lg(coef1, "URI5_NAP_1M_2M")
p2 <- make_forest_plot_lg(coef2, "URI5_ACE")
p3 <- make_forest_plot_lg(coef3, "URI5_FLU_PHE")
p4 <- make_forest_plot_lg(coef4, "URI5_PYR")
p5 <- make_forest_plot_lg(coef5, "URI5_CHR")
plot_list <- list(p1, p2, p3, p4, p5)
for(j in 1:5){
plot_list[[j]] <- plot_list[[j]] + ylim(c(-8, 8))
}
grid.arrange(grobs = plot_list,  ncol = 2,
top = textGrob(paste("Estimated Effect of each Exposure Prototype \n based on measured urinary biomarkers"),
gp=gpar(fontsize=15, fontface = 'bold')))
coefs_list <- list(coef1, coef2, coef3, coef4, coef5)
names(coefs_list) <- var_name_list$cluster_exp$clusURI5
cat("The estimated effects:")
for(j in 1:5){
coefs_list[[j]] <- coefs_list[[j]][, -7] %>%
mutate(coefficient = round(coefficient, 4),
std = round(as.numeric(std), 4),
ci_lower = round(ci_lower, 4),
ci_upper = round(ci_upper, 4),
p_val = round(as.numeric(p_val), 4))
}
print(coefs_list)
library(here)
library(dplyr)
library(gtsummary)
library(stringr)
library(umap)
library(ggplot2)
plotFolder <- here("images", "02_CCL_EDA")
if(!file.exists(plotFolder)) dir.create(plotFolder,recursive=TRUE)
dataOutFolder <- here("data", "CCLE")
if(!file.exists(dataOutFolder)) dir.create(dataOutFolder,recursive=TRUE)
knitr::opts_chunk$set(
cache=FALSE, autodep=FALSE, warning=FALSE, message=FALSE, echo=TRUE,
results = 'markup', dev='png', dpi=150, fig.align = "center", fig.path=plotFolder,
fig.width = 4, fig.height = 3,
cache.path=".cache/",
duplicate.label="allow"
)
CCLE_files <- here("data", "CCLE")
CTRP_files <- here("data", "CTRP")
primary_disease_color <- c("Leukemia",
"Colon/Colorectal Cancer",
"Ovarian Cancer" )
lineage_color <- c("blood" = "gold",
"plasma_cell" = "gold3",
"bone" = "goldenrod1",
"engineered_bone" = "goldenrod2",
"engineered_blood" = "gold2",
"lymphocyte" = "firebrick1",
"colorectal" = "darkolivegreen1",
"pancreas" = "darkolivegreen2",
"gastric" = "darkseagreen1",
"bile_duct" = "darkseagreen2",
"upper_aerodigestive" = "darkseagreen3",
"esophagus" = "darkseagreen",
"ovary" = "mediumorchid",
"lung" = "mediumorchid1",
"engineered_lung" = "mediumorchid2",
"breast" = "mediumpurple",
"engineered_breast" = "mediumpurple1",
"urinary_tract" = "purple",
"uterus" = "purple1",
"prostate" = "purple3",
"engineered_prostate" = "purple4",
"cervix" = "plum2",
"embryo" = "plum3",
"kidney" = "seagreen1",
"engineered_kidney" = "seagreen2",
"adrenal_cortex" = "seagreen3",
"thyroid" = "salmon4",
"central_nervous_system" = "royalblue",
"peripheral_nervous_system" = "royalblue1",
"engineered_central_nervous_system" = "royalblue2",
"skin" = "thistle1",
"soft_tissue" = "thistle3",
"epidermoid_carcinoma" = "thistle4",
"fibroblast" = "thistle2",
"eye" = "tan2",
"engineered" = "brown",
"unknown" = "gray")
CCLE_anno <- read.csv(here(CCLE_files, "CCLE_annotation.csv"))
CTRP_auc <- read.csv(here(CTRP_files, "CTRP_auc_sensitivities.csv"), row.names = 1)
CTRP_auc <- CTRP_auc %>% select(DepMap_ID, cpd_name, broad_cpd_id, area_under_curve)
CTRP_auc <- CTRP_auc %>%
group_by(broad_cpd_id) %>%
mutate(Var = var(area_under_curve)) %>%
ungroup()
cpb_choos <- unique(CTRP_auc$broad_cpd_id[CTRP_auc$Var >  sort(unique(CTRP_auc$Var), decreasing=T)[10]])
CTRP_auc_small <- CTRP_auc[CTRP_auc$broad_cpd_id %in% c(cpb_choos), ]
CTRP_ccl_meta <- read.csv(here(CTRP_files, "CTRP_ccl_meta.csv"), row.names = 1)
# ccl_hist_avg_auc <- CTRP_auc %>%
#   left_join(CTRP_ccl_meta %>% select(master_ccl_id, ccle_primary_hist),
#             by ="master_ccl_id") %>%
#   dplyr::filter(ccle_primary_hist != "") %>%
#   group_by(ccle_primary_hist, DepMap_ID) %>%
#   summarise(mean_auc = mean(area_under_curve))
# ctrp_auc_RNAseq %>%
#   group_by(DepMap_ID) %>%
#   summarise(n_compounds=n()) %>%
#   ggplot() + geom_histogram(aes(x = n_compounds), fill="blue",col="black") +
#   theme_bw() + labs(x = "Number of Compounds Tested", y = "CCL Freq")
CCLE_anno %>%
select(-DepMap_ID) %>%
tbl_summary(statistic=list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing_text = "(Missing)")
CCLE_RNAseq_ExonUsageRatio <- read.csv(here(CCLE_files, "CCLE_RNAseq_ExonUsageRatio.csv"), row.names = 1)
colnames(CCLE_RNAseq_ExonUsageRatio) <- gsub("[.]", "-", colnames(CCLE_RNAseq_ExonUsageRatio))
dim(CCLE_RNAseq_ExonUsageRatio)
CCLE_DNA_methylation <- read.csv(here(CCLE_files, "CCLE_DNA_methylation.csv"), row.names = 1)
colnames(CCLE_DNA_methylation) <- gsub("[.]", "-", colnames(CCLE_DNA_methylation))
dim(CCLE_DNA_methylation)
CCLE_RNAseq_ExonUsageRatio_umap <-
uwot::umap(t(CCLE_RNAseq_ExonUsageRatio),
pca = 25,
n_neighbors = 25)
CCLE_RNAseq_ExonUsageRatio_umap_df <-
data.frame(CCLE_RNAseq_ExonUsageRatio_umap) %>%
mutate(DepMap_ID = colnames(CCLE_RNAseq_ExonUsageRatio))
head(CCLE_RNAseq_ExonUsageRatio_umap_df)
names(CCLE_RNAseq_ExonUsageRatio_umap_df) <- c("UMAP1", "UMAP2", "DepMap_ID")
CCLE_RNAseq_ExonUsageRatio_umap_df <- merge(CCLE_RNAseq_ExonUsageRatio_umap_df, CCLE_anno, by="DepMap_ID", all.x = T)
CCLE_RNAseq_ExonUsageRatio_umap_df <- merge(CCLE_RNAseq_ExonUsageRatio_umap_df, CTRP_auc_small,
by="DepMap_ID", all.x = T)
ggplot(CCLE_RNAseq_ExonUsageRatio_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=sex)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE RNAseq_rpkm\ncolored by sex")
ggplot(CCLE_RNAseq_ExonUsageRatio_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=lineage)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE Exon Usage Ratio\ncolored by lineage") +
scale_color_manual(values = lineage_color)
ggplot(CCLE_RNAseq_ExonUsageRatio_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=lineage)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE Exon Usage Ratio\ncolored by lineage") +
scale_color_manual(values = lineage_color) +
guides(fill=guide_legend(ncol=2))
ggplot(CCLE_RNAseq_ExonUsageRatio_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=lineage)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE Exon Usage Ratio\ncolored by lineage") +
scale_color_manual(values = lineage_color) +
guides(fill=guide_legend(ncol=3))
ggplot(CCLE_RNAseq_ExonUsageRatio_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=lineage)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE Exon Usage Ratio\ncolored by lineage") +
scale_color_manual(values = lineage_color) +
guides(color=guide_legend(ncol=3))
ggplot(CCLE_RNAseq_ExonUsageRatio_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=lineage)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE Exon Usage Ratio\ncolored by lineage") +
scale_color_manual(values = lineage_color) +
guides(color=guide_legend(ncol=3))
# CCLE_RNAseq_rpkm_umap_df$area_under_curve = log(CCLE_RNAseq_rpkm_umap_df$area_under_curve)
#
# CCLE_RNAseq_rpkm_umap_df$area_under_curve = exp(CCLE_RNAseq_rpkm_umap_df$area_under_curve)
ggplot(CCLE_RNAseq_ExonUsageRatio_umap_df %>%
filter(!is.na(cpd_name))) +
geom_point(aes(x=UMAP1,y=UMAP2, color=area_under_curve)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE Exon Usage Ratio\ncolored by Area Under the Drug Response Curve") +
facet_wrap(~cpd_name) +
scale_color_gradient2(midpoint = 10)
# scale AUC between 0 and 1?
# use high variant CPD for plotting
# or group cpd with their mean AUC
CCLE_DNA_methylation_umap <-
uwot::umap(t(CCLE_DNA_methylation),
pca = 25,
n_neighbors = 25)
CCLE_DNA_methylation_umap_df <-
data.frame(CCLE_RNAseq_rpkm_umap) %>%
mutate(DepMap_ID = colnames(CCLE_DNA_methylation))
CCLE_DNA_methylation_umap <-
uwot::umap(t(CCLE_DNA_methylation),
pca = 25,
n_neighbors = 25)
CCLE_DNA_methylation_umap_df <-
data.frame(CCLE_DNA_methylation_umap) %>%
mutate(DepMap_ID = colnames(CCLE_DNA_methylation))
names(CCLE_DNA_methylation_umap_df) <- c("UMAP1", "UMAP2", "DepMap_ID")
CCLE_DNA_methylation_umap_df <- merge(CCLE_DNA_methylation_umap_df, CCLE_anno, by="DepMap_ID", all.x = T)
CCLE_DNA_methylation_umap_df <- merge(CCLE_DNA_methylation_umap_df, CTRP_auc_small,
by="DepMap_ID", all.x = T)
ggplot(CCLE_DNA_methylation_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=sex)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE DNA Methylation\ncolored by sex")
ggplot(CCLE_DNA_methylation_umap_df) +
geom_point(aes(x=UMAP1,y=UMAP2, color=lineage)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE DNA Methylation\ncolored by lineage") +
scale_color_manual(values = lineage_color)
ggplot(CCLE_DNA_methylation_umap_df %>%
filter(!is.na(cpd_name))) +
geom_point(aes(x=UMAP1,y=UMAP2, color=area_under_curve)) +
labs(x="UMAP1", y="UMAP2") +
theme_bw() +
ggtitle("UMAP of CCLE DNA Methylation\ncolored by Area Under the Drug Response Curve") +
facet_wrap(~cpd_name) +
scale_color_gradient2(midpoint = 10)
